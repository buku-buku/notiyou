# Uncomment this line to define a global platform for your project
# platform :ios, '12.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end

pre_install do |installer|
  puts "🔄 Copying environment variables..."
  
  env_file = '../.env'
  xcconfig_file = 'Flutter/Common.xcconfig'
  
  # .env 파일 존재 확인
  unless File.exist?(env_file)
    puts "❌ .env file not found"
    exit 1
  end
  
  begin
    # xcconfig 파일 생성 또는 업데이트
    FileUtils.touch(xcconfig_file)
    FileUtils.cp(env_file, xcconfig_file)
    
    # xcconfig 파일 포맷 검증
    File.foreach(xcconfig_file) do |line|
      unless line.match(/^[A-Z_]+=.*$/) || line.strip.empty?
        puts "❌ Invalid format in Common.xcconfig"
        exit 1
      end
    end
    
    puts "✅ Successfully created Common.xcconfig with values from .env"
  rescue => e
    puts "❌ Failed to process configuration files: #{e.message}"
    exit 1
  end
end
