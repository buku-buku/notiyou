name: CI

on:
  push:
    branches:
      - "**"

# 동일한 PR에 대한 중복 실행 방지를 위한 concurrency 설정 추가
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      has_tests: ${{ steps.check_tests.outputs.has_tests }}
      env_content: ${{ steps.env_content.outputs.content }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if test directory exists
        id: check_tests
        run: |
          if [ -d "test" ]; then
            echo "has_tests=true" >> $GITHUB_OUTPUT
          else
            echo "has_tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate env content
        id: env_content
        run: |
          cat << EOF >> $GITHUB_OUTPUT
          content<<EOL
          SUPABASE_URL=${{ secrets.ENV_SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.ENV_SUPABASE_ANON_KEY }}
          KAKAO_NATIVE_APP_KEY=${{ secrets.ENV_KAKAO_NATIVE_APP_KEY }}
          EOL
          EOF

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Environment File
        shell: bash
        run: |
          echo "${{ needs.setup.outputs.env_content }}" > .env

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: "stable"

      - name: Run Flutter analyze
        run: flutter analyze

  test:
    needs: setup
    runs-on: ubuntu-latest
    if: needs.setup.outputs.has_tests == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Environment File
        shell: bash
        run: |
          echo "${{ needs.setup.outputs.env_content }}" > .env

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: "stable"

      - name: Run Flutter tests
        run: flutter test

  build-android:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Environment File
        shell: bash
        run: |
          echo "${{ needs.setup.outputs.env_content }}" > .env

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: "stable"

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build Android APK
        run: flutter build apk

  build-ios:
    needs: setup
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create Environment File
        shell: bash
        run: |
          echo "${{ needs.setup.outputs.env_content }}" > .env

      - name: Create Common.xcconfig
        run: |
          mkdir -p ios/Flutter
          echo "#include? \"Pods/Target Support Files/Pods-Runner/Pods-Runner.debug.xcconfig\"" > ios/Flutter/Common.xcconfig
          echo "#include? \"Pods/Target Support Files/Pods-Runner/Pods-Runner.release.xcconfig\"" >> ios/Flutter/Common.xcconfig

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          cache: true
          channel: "stable"

      - name: Build iOS App for Simulator
        run: flutter build ios --simulator
